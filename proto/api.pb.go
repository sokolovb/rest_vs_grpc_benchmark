// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	proto/api.proto

It has these top-level messages:
	Request
	Int
	IntSlice
	String
	StringSlice
	Blob
	Struct
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto1.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Int struct {
	Value int32 `protobuf:"varint,1,opt,name=value" json:"value,omitempty"`
}

func (m *Int) Reset()                    { *m = Int{} }
func (m *Int) String() string            { return proto1.CompactTextString(m) }
func (*Int) ProtoMessage()               {}
func (*Int) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Int) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type IntSlice struct {
	Value []int32 `protobuf:"varint,1,rep,packed,name=value" json:"value,omitempty"`
}

func (m *IntSlice) Reset()                    { *m = IntSlice{} }
func (m *IntSlice) String() string            { return proto1.CompactTextString(m) }
func (*IntSlice) ProtoMessage()               {}
func (*IntSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *IntSlice) GetValue() []int32 {
	if m != nil {
		return m.Value
	}
	return nil
}

type String struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *String) Reset()                    { *m = String{} }
func (m *String) String() string            { return proto1.CompactTextString(m) }
func (*String) ProtoMessage()               {}
func (*String) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *String) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type StringSlice struct {
	Value []string `protobuf:"bytes,1,rep,name=value" json:"value,omitempty"`
}

func (m *StringSlice) Reset()                    { *m = StringSlice{} }
func (m *StringSlice) String() string            { return proto1.CompactTextString(m) }
func (*StringSlice) ProtoMessage()               {}
func (*StringSlice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StringSlice) GetValue() []string {
	if m != nil {
		return m.Value
	}
	return nil
}

type Blob struct {
	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (m *Blob) Reset()                    { *m = Blob{} }
func (m *Blob) String() string            { return proto1.CompactTextString(m) }
func (*Blob) ProtoMessage()               {}
func (*Blob) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Blob) GetValue() []byte {
	if m != nil {
		return m.Value
	}
	return nil
}

type Struct struct {
	Value1   int32 `protobuf:"varint,1,opt,name=value1" json:"value1,omitempty"`
	Value2   int32 `protobuf:"varint,2,opt,name=value2" json:"value2,omitempty"`
	Value3   int32 `protobuf:"varint,3,opt,name=value3" json:"value3,omitempty"`
	Value4   int32 `protobuf:"varint,4,opt,name=value4" json:"value4,omitempty"`
	Value5   int32 `protobuf:"varint,5,opt,name=value5" json:"value5,omitempty"`
	Value6   int32 `protobuf:"varint,6,opt,name=value6" json:"value6,omitempty"`
	Value7   int32 `protobuf:"varint,7,opt,name=value7" json:"value7,omitempty"`
	Value8   int32 `protobuf:"varint,8,opt,name=value8" json:"value8,omitempty"`
	Value9   int32 `protobuf:"varint,9,opt,name=value9" json:"value9,omitempty"`
	Value10  int32 `protobuf:"varint,10,opt,name=value10" json:"value10,omitempty"`
	Value11  int32 `protobuf:"varint,11,opt,name=value11" json:"value11,omitempty"`
	Value12  int32 `protobuf:"varint,12,opt,name=value12" json:"value12,omitempty"`
	Value13  int32 `protobuf:"varint,13,opt,name=value13" json:"value13,omitempty"`
	Value14  int32 `protobuf:"varint,14,opt,name=value14" json:"value14,omitempty"`
	Value15  int32 `protobuf:"varint,15,opt,name=value15" json:"value15,omitempty"`
	Value16  int32 `protobuf:"varint,16,opt,name=value16" json:"value16,omitempty"`
	Value17  int32 `protobuf:"varint,17,opt,name=value17" json:"value17,omitempty"`
	Value18  int32 `protobuf:"varint,18,opt,name=value18" json:"value18,omitempty"`
	Value19  int32 `protobuf:"varint,19,opt,name=value19" json:"value19,omitempty"`
	Value20  int32 `protobuf:"varint,20,opt,name=value20" json:"value20,omitempty"`
	Value21  int32 `protobuf:"varint,21,opt,name=value21" json:"value21,omitempty"`
	Value22  int32 `protobuf:"varint,22,opt,name=value22" json:"value22,omitempty"`
	Value23  int32 `protobuf:"varint,23,opt,name=value23" json:"value23,omitempty"`
	Value24  int32 `protobuf:"varint,24,opt,name=value24" json:"value24,omitempty"`
	Value25  int32 `protobuf:"varint,25,opt,name=value25" json:"value25,omitempty"`
	Value26  int32 `protobuf:"varint,26,opt,name=value26" json:"value26,omitempty"`
	Value27  int32 `protobuf:"varint,27,opt,name=value27" json:"value27,omitempty"`
	Value28  int32 `protobuf:"varint,28,opt,name=value28" json:"value28,omitempty"`
	Value29  int32 `protobuf:"varint,29,opt,name=value29" json:"value29,omitempty"`
	Value30  int32 `protobuf:"varint,30,opt,name=value30" json:"value30,omitempty"`
	Value31  int32 `protobuf:"varint,31,opt,name=value31" json:"value31,omitempty"`
	Value32  int32 `protobuf:"varint,32,opt,name=value32" json:"value32,omitempty"`
	Value33  int32 `protobuf:"varint,33,opt,name=value33" json:"value33,omitempty"`
	Value34  int32 `protobuf:"varint,34,opt,name=value34" json:"value34,omitempty"`
	Value35  int32 `protobuf:"varint,35,opt,name=value35" json:"value35,omitempty"`
	Value36  int32 `protobuf:"varint,36,opt,name=value36" json:"value36,omitempty"`
	Value37  int32 `protobuf:"varint,37,opt,name=value37" json:"value37,omitempty"`
	Value38  int32 `protobuf:"varint,38,opt,name=value38" json:"value38,omitempty"`
	Value39  int32 `protobuf:"varint,39,opt,name=value39" json:"value39,omitempty"`
	Value40  int32 `protobuf:"varint,40,opt,name=value40" json:"value40,omitempty"`
	Value41  int32 `protobuf:"varint,41,opt,name=value41" json:"value41,omitempty"`
	Value42  int32 `protobuf:"varint,42,opt,name=value42" json:"value42,omitempty"`
	Value43  int32 `protobuf:"varint,43,opt,name=value43" json:"value43,omitempty"`
	Value44  int32 `protobuf:"varint,44,opt,name=value44" json:"value44,omitempty"`
	Value45  int32 `protobuf:"varint,45,opt,name=value45" json:"value45,omitempty"`
	Value46  int32 `protobuf:"varint,46,opt,name=value46" json:"value46,omitempty"`
	Value47  int32 `protobuf:"varint,47,opt,name=value47" json:"value47,omitempty"`
	Value48  int32 `protobuf:"varint,48,opt,name=value48" json:"value48,omitempty"`
	Value49  int32 `protobuf:"varint,49,opt,name=value49" json:"value49,omitempty"`
	Value50  int32 `protobuf:"varint,50,opt,name=value50" json:"value50,omitempty"`
	Value51  int32 `protobuf:"varint,51,opt,name=value51" json:"value51,omitempty"`
	Value52  int32 `protobuf:"varint,52,opt,name=value52" json:"value52,omitempty"`
	Value53  int32 `protobuf:"varint,53,opt,name=value53" json:"value53,omitempty"`
	Value54  int32 `protobuf:"varint,54,opt,name=value54" json:"value54,omitempty"`
	Value55  int32 `protobuf:"varint,55,opt,name=value55" json:"value55,omitempty"`
	Value56  int32 `protobuf:"varint,56,opt,name=value56" json:"value56,omitempty"`
	Value57  int32 `protobuf:"varint,57,opt,name=value57" json:"value57,omitempty"`
	Value58  int32 `protobuf:"varint,58,opt,name=value58" json:"value58,omitempty"`
	Value59  int32 `protobuf:"varint,59,opt,name=value59" json:"value59,omitempty"`
	Value60  int32 `protobuf:"varint,60,opt,name=value60" json:"value60,omitempty"`
	Value61  int32 `protobuf:"varint,61,opt,name=value61" json:"value61,omitempty"`
	Value62  int32 `protobuf:"varint,62,opt,name=value62" json:"value62,omitempty"`
	Value63  int32 `protobuf:"varint,63,opt,name=value63" json:"value63,omitempty"`
	Value64  int32 `protobuf:"varint,64,opt,name=value64" json:"value64,omitempty"`
	Value65  int32 `protobuf:"varint,65,opt,name=value65" json:"value65,omitempty"`
	Value66  int32 `protobuf:"varint,66,opt,name=value66" json:"value66,omitempty"`
	Value67  int32 `protobuf:"varint,67,opt,name=value67" json:"value67,omitempty"`
	Value68  int32 `protobuf:"varint,68,opt,name=value68" json:"value68,omitempty"`
	Value69  int32 `protobuf:"varint,69,opt,name=value69" json:"value69,omitempty"`
	Value70  int32 `protobuf:"varint,70,opt,name=value70" json:"value70,omitempty"`
	Value71  int32 `protobuf:"varint,71,opt,name=value71" json:"value71,omitempty"`
	Value72  int32 `protobuf:"varint,72,opt,name=value72" json:"value72,omitempty"`
	Value73  int32 `protobuf:"varint,73,opt,name=value73" json:"value73,omitempty"`
	Value74  int32 `protobuf:"varint,74,opt,name=value74" json:"value74,omitempty"`
	Value75  int32 `protobuf:"varint,75,opt,name=value75" json:"value75,omitempty"`
	Value76  int32 `protobuf:"varint,76,opt,name=value76" json:"value76,omitempty"`
	Value77  int32 `protobuf:"varint,77,opt,name=value77" json:"value77,omitempty"`
	Value78  int32 `protobuf:"varint,78,opt,name=value78" json:"value78,omitempty"`
	Value79  int32 `protobuf:"varint,79,opt,name=value79" json:"value79,omitempty"`
	Value80  int32 `protobuf:"varint,80,opt,name=value80" json:"value80,omitempty"`
	Value81  int32 `protobuf:"varint,81,opt,name=value81" json:"value81,omitempty"`
	Value82  int32 `protobuf:"varint,82,opt,name=value82" json:"value82,omitempty"`
	Value83  int32 `protobuf:"varint,83,opt,name=value83" json:"value83,omitempty"`
	Value84  int32 `protobuf:"varint,84,opt,name=value84" json:"value84,omitempty"`
	Value85  int32 `protobuf:"varint,85,opt,name=value85" json:"value85,omitempty"`
	Value86  int32 `protobuf:"varint,86,opt,name=value86" json:"value86,omitempty"`
	Value87  int32 `protobuf:"varint,87,opt,name=value87" json:"value87,omitempty"`
	Value88  int32 `protobuf:"varint,88,opt,name=value88" json:"value88,omitempty"`
	Value89  int32 `protobuf:"varint,89,opt,name=value89" json:"value89,omitempty"`
	Value90  int32 `protobuf:"varint,90,opt,name=value90" json:"value90,omitempty"`
	Value91  int32 `protobuf:"varint,91,opt,name=value91" json:"value91,omitempty"`
	Value92  int32 `protobuf:"varint,92,opt,name=value92" json:"value92,omitempty"`
	Value93  int32 `protobuf:"varint,93,opt,name=value93" json:"value93,omitempty"`
	Value94  int32 `protobuf:"varint,94,opt,name=value94" json:"value94,omitempty"`
	Value95  int32 `protobuf:"varint,95,opt,name=value95" json:"value95,omitempty"`
	Value96  int32 `protobuf:"varint,96,opt,name=value96" json:"value96,omitempty"`
	Value97  int32 `protobuf:"varint,97,opt,name=value97" json:"value97,omitempty"`
	Value98  int32 `protobuf:"varint,98,opt,name=value98" json:"value98,omitempty"`
	Value99  int32 `protobuf:"varint,99,opt,name=value99" json:"value99,omitempty"`
	Value100 int32 `protobuf:"varint,100,opt,name=value100" json:"value100,omitempty"`
}

func (m *Struct) Reset()                    { *m = Struct{} }
func (m *Struct) String() string            { return proto1.CompactTextString(m) }
func (*Struct) ProtoMessage()               {}
func (*Struct) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *Struct) GetValue1() int32 {
	if m != nil {
		return m.Value1
	}
	return 0
}

func (m *Struct) GetValue2() int32 {
	if m != nil {
		return m.Value2
	}
	return 0
}

func (m *Struct) GetValue3() int32 {
	if m != nil {
		return m.Value3
	}
	return 0
}

func (m *Struct) GetValue4() int32 {
	if m != nil {
		return m.Value4
	}
	return 0
}

func (m *Struct) GetValue5() int32 {
	if m != nil {
		return m.Value5
	}
	return 0
}

func (m *Struct) GetValue6() int32 {
	if m != nil {
		return m.Value6
	}
	return 0
}

func (m *Struct) GetValue7() int32 {
	if m != nil {
		return m.Value7
	}
	return 0
}

func (m *Struct) GetValue8() int32 {
	if m != nil {
		return m.Value8
	}
	return 0
}

func (m *Struct) GetValue9() int32 {
	if m != nil {
		return m.Value9
	}
	return 0
}

func (m *Struct) GetValue10() int32 {
	if m != nil {
		return m.Value10
	}
	return 0
}

func (m *Struct) GetValue11() int32 {
	if m != nil {
		return m.Value11
	}
	return 0
}

func (m *Struct) GetValue12() int32 {
	if m != nil {
		return m.Value12
	}
	return 0
}

func (m *Struct) GetValue13() int32 {
	if m != nil {
		return m.Value13
	}
	return 0
}

func (m *Struct) GetValue14() int32 {
	if m != nil {
		return m.Value14
	}
	return 0
}

func (m *Struct) GetValue15() int32 {
	if m != nil {
		return m.Value15
	}
	return 0
}

func (m *Struct) GetValue16() int32 {
	if m != nil {
		return m.Value16
	}
	return 0
}

func (m *Struct) GetValue17() int32 {
	if m != nil {
		return m.Value17
	}
	return 0
}

func (m *Struct) GetValue18() int32 {
	if m != nil {
		return m.Value18
	}
	return 0
}

func (m *Struct) GetValue19() int32 {
	if m != nil {
		return m.Value19
	}
	return 0
}

func (m *Struct) GetValue20() int32 {
	if m != nil {
		return m.Value20
	}
	return 0
}

func (m *Struct) GetValue21() int32 {
	if m != nil {
		return m.Value21
	}
	return 0
}

func (m *Struct) GetValue22() int32 {
	if m != nil {
		return m.Value22
	}
	return 0
}

func (m *Struct) GetValue23() int32 {
	if m != nil {
		return m.Value23
	}
	return 0
}

func (m *Struct) GetValue24() int32 {
	if m != nil {
		return m.Value24
	}
	return 0
}

func (m *Struct) GetValue25() int32 {
	if m != nil {
		return m.Value25
	}
	return 0
}

func (m *Struct) GetValue26() int32 {
	if m != nil {
		return m.Value26
	}
	return 0
}

func (m *Struct) GetValue27() int32 {
	if m != nil {
		return m.Value27
	}
	return 0
}

func (m *Struct) GetValue28() int32 {
	if m != nil {
		return m.Value28
	}
	return 0
}

func (m *Struct) GetValue29() int32 {
	if m != nil {
		return m.Value29
	}
	return 0
}

func (m *Struct) GetValue30() int32 {
	if m != nil {
		return m.Value30
	}
	return 0
}

func (m *Struct) GetValue31() int32 {
	if m != nil {
		return m.Value31
	}
	return 0
}

func (m *Struct) GetValue32() int32 {
	if m != nil {
		return m.Value32
	}
	return 0
}

func (m *Struct) GetValue33() int32 {
	if m != nil {
		return m.Value33
	}
	return 0
}

func (m *Struct) GetValue34() int32 {
	if m != nil {
		return m.Value34
	}
	return 0
}

func (m *Struct) GetValue35() int32 {
	if m != nil {
		return m.Value35
	}
	return 0
}

func (m *Struct) GetValue36() int32 {
	if m != nil {
		return m.Value36
	}
	return 0
}

func (m *Struct) GetValue37() int32 {
	if m != nil {
		return m.Value37
	}
	return 0
}

func (m *Struct) GetValue38() int32 {
	if m != nil {
		return m.Value38
	}
	return 0
}

func (m *Struct) GetValue39() int32 {
	if m != nil {
		return m.Value39
	}
	return 0
}

func (m *Struct) GetValue40() int32 {
	if m != nil {
		return m.Value40
	}
	return 0
}

func (m *Struct) GetValue41() int32 {
	if m != nil {
		return m.Value41
	}
	return 0
}

func (m *Struct) GetValue42() int32 {
	if m != nil {
		return m.Value42
	}
	return 0
}

func (m *Struct) GetValue43() int32 {
	if m != nil {
		return m.Value43
	}
	return 0
}

func (m *Struct) GetValue44() int32 {
	if m != nil {
		return m.Value44
	}
	return 0
}

func (m *Struct) GetValue45() int32 {
	if m != nil {
		return m.Value45
	}
	return 0
}

func (m *Struct) GetValue46() int32 {
	if m != nil {
		return m.Value46
	}
	return 0
}

func (m *Struct) GetValue47() int32 {
	if m != nil {
		return m.Value47
	}
	return 0
}

func (m *Struct) GetValue48() int32 {
	if m != nil {
		return m.Value48
	}
	return 0
}

func (m *Struct) GetValue49() int32 {
	if m != nil {
		return m.Value49
	}
	return 0
}

func (m *Struct) GetValue50() int32 {
	if m != nil {
		return m.Value50
	}
	return 0
}

func (m *Struct) GetValue51() int32 {
	if m != nil {
		return m.Value51
	}
	return 0
}

func (m *Struct) GetValue52() int32 {
	if m != nil {
		return m.Value52
	}
	return 0
}

func (m *Struct) GetValue53() int32 {
	if m != nil {
		return m.Value53
	}
	return 0
}

func (m *Struct) GetValue54() int32 {
	if m != nil {
		return m.Value54
	}
	return 0
}

func (m *Struct) GetValue55() int32 {
	if m != nil {
		return m.Value55
	}
	return 0
}

func (m *Struct) GetValue56() int32 {
	if m != nil {
		return m.Value56
	}
	return 0
}

func (m *Struct) GetValue57() int32 {
	if m != nil {
		return m.Value57
	}
	return 0
}

func (m *Struct) GetValue58() int32 {
	if m != nil {
		return m.Value58
	}
	return 0
}

func (m *Struct) GetValue59() int32 {
	if m != nil {
		return m.Value59
	}
	return 0
}

func (m *Struct) GetValue60() int32 {
	if m != nil {
		return m.Value60
	}
	return 0
}

func (m *Struct) GetValue61() int32 {
	if m != nil {
		return m.Value61
	}
	return 0
}

func (m *Struct) GetValue62() int32 {
	if m != nil {
		return m.Value62
	}
	return 0
}

func (m *Struct) GetValue63() int32 {
	if m != nil {
		return m.Value63
	}
	return 0
}

func (m *Struct) GetValue64() int32 {
	if m != nil {
		return m.Value64
	}
	return 0
}

func (m *Struct) GetValue65() int32 {
	if m != nil {
		return m.Value65
	}
	return 0
}

func (m *Struct) GetValue66() int32 {
	if m != nil {
		return m.Value66
	}
	return 0
}

func (m *Struct) GetValue67() int32 {
	if m != nil {
		return m.Value67
	}
	return 0
}

func (m *Struct) GetValue68() int32 {
	if m != nil {
		return m.Value68
	}
	return 0
}

func (m *Struct) GetValue69() int32 {
	if m != nil {
		return m.Value69
	}
	return 0
}

func (m *Struct) GetValue70() int32 {
	if m != nil {
		return m.Value70
	}
	return 0
}

func (m *Struct) GetValue71() int32 {
	if m != nil {
		return m.Value71
	}
	return 0
}

func (m *Struct) GetValue72() int32 {
	if m != nil {
		return m.Value72
	}
	return 0
}

func (m *Struct) GetValue73() int32 {
	if m != nil {
		return m.Value73
	}
	return 0
}

func (m *Struct) GetValue74() int32 {
	if m != nil {
		return m.Value74
	}
	return 0
}

func (m *Struct) GetValue75() int32 {
	if m != nil {
		return m.Value75
	}
	return 0
}

func (m *Struct) GetValue76() int32 {
	if m != nil {
		return m.Value76
	}
	return 0
}

func (m *Struct) GetValue77() int32 {
	if m != nil {
		return m.Value77
	}
	return 0
}

func (m *Struct) GetValue78() int32 {
	if m != nil {
		return m.Value78
	}
	return 0
}

func (m *Struct) GetValue79() int32 {
	if m != nil {
		return m.Value79
	}
	return 0
}

func (m *Struct) GetValue80() int32 {
	if m != nil {
		return m.Value80
	}
	return 0
}

func (m *Struct) GetValue81() int32 {
	if m != nil {
		return m.Value81
	}
	return 0
}

func (m *Struct) GetValue82() int32 {
	if m != nil {
		return m.Value82
	}
	return 0
}

func (m *Struct) GetValue83() int32 {
	if m != nil {
		return m.Value83
	}
	return 0
}

func (m *Struct) GetValue84() int32 {
	if m != nil {
		return m.Value84
	}
	return 0
}

func (m *Struct) GetValue85() int32 {
	if m != nil {
		return m.Value85
	}
	return 0
}

func (m *Struct) GetValue86() int32 {
	if m != nil {
		return m.Value86
	}
	return 0
}

func (m *Struct) GetValue87() int32 {
	if m != nil {
		return m.Value87
	}
	return 0
}

func (m *Struct) GetValue88() int32 {
	if m != nil {
		return m.Value88
	}
	return 0
}

func (m *Struct) GetValue89() int32 {
	if m != nil {
		return m.Value89
	}
	return 0
}

func (m *Struct) GetValue90() int32 {
	if m != nil {
		return m.Value90
	}
	return 0
}

func (m *Struct) GetValue91() int32 {
	if m != nil {
		return m.Value91
	}
	return 0
}

func (m *Struct) GetValue92() int32 {
	if m != nil {
		return m.Value92
	}
	return 0
}

func (m *Struct) GetValue93() int32 {
	if m != nil {
		return m.Value93
	}
	return 0
}

func (m *Struct) GetValue94() int32 {
	if m != nil {
		return m.Value94
	}
	return 0
}

func (m *Struct) GetValue95() int32 {
	if m != nil {
		return m.Value95
	}
	return 0
}

func (m *Struct) GetValue96() int32 {
	if m != nil {
		return m.Value96
	}
	return 0
}

func (m *Struct) GetValue97() int32 {
	if m != nil {
		return m.Value97
	}
	return 0
}

func (m *Struct) GetValue98() int32 {
	if m != nil {
		return m.Value98
	}
	return 0
}

func (m *Struct) GetValue99() int32 {
	if m != nil {
		return m.Value99
	}
	return 0
}

func (m *Struct) GetValue100() int32 {
	if m != nil {
		return m.Value100
	}
	return 0
}

func init() {
	proto1.RegisterType((*Request)(nil), "proto.Request")
	proto1.RegisterType((*Int)(nil), "proto.Int")
	proto1.RegisterType((*IntSlice)(nil), "proto.IntSlice")
	proto1.RegisterType((*String)(nil), "proto.String")
	proto1.RegisterType((*StringSlice)(nil), "proto.StringSlice")
	proto1.RegisterType((*Blob)(nil), "proto.Blob")
	proto1.RegisterType((*Struct)(nil), "proto.Struct")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Benchmark service

type BenchmarkClient interface {
	GetInt(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Int, error)
	GetIntSlice(ctx context.Context, in *Request, opts ...grpc.CallOption) (*IntSlice, error)
	GetString(ctx context.Context, in *Request, opts ...grpc.CallOption) (*String, error)
	GetStringSlice(ctx context.Context, in *Request, opts ...grpc.CallOption) (*StringSlice, error)
	GetBlob(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Blob, error)
	GetStruct(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Struct, error)
}

type benchmarkClient struct {
	cc *grpc.ClientConn
}

func NewBenchmarkClient(cc *grpc.ClientConn) BenchmarkClient {
	return &benchmarkClient{cc}
}

func (c *benchmarkClient) GetInt(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Int, error) {
	out := new(Int)
	err := grpc.Invoke(ctx, "/proto.Benchmark/GetInt", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *benchmarkClient) GetIntSlice(ctx context.Context, in *Request, opts ...grpc.CallOption) (*IntSlice, error) {
	out := new(IntSlice)
	err := grpc.Invoke(ctx, "/proto.Benchmark/GetIntSlice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *benchmarkClient) GetString(ctx context.Context, in *Request, opts ...grpc.CallOption) (*String, error) {
	out := new(String)
	err := grpc.Invoke(ctx, "/proto.Benchmark/GetString", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *benchmarkClient) GetStringSlice(ctx context.Context, in *Request, opts ...grpc.CallOption) (*StringSlice, error) {
	out := new(StringSlice)
	err := grpc.Invoke(ctx, "/proto.Benchmark/GetStringSlice", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *benchmarkClient) GetBlob(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Blob, error) {
	out := new(Blob)
	err := grpc.Invoke(ctx, "/proto.Benchmark/GetBlob", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *benchmarkClient) GetStruct(ctx context.Context, in *Request, opts ...grpc.CallOption) (*Struct, error) {
	out := new(Struct)
	err := grpc.Invoke(ctx, "/proto.Benchmark/GetStruct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Benchmark service

type BenchmarkServer interface {
	GetInt(context.Context, *Request) (*Int, error)
	GetIntSlice(context.Context, *Request) (*IntSlice, error)
	GetString(context.Context, *Request) (*String, error)
	GetStringSlice(context.Context, *Request) (*StringSlice, error)
	GetBlob(context.Context, *Request) (*Blob, error)
	GetStruct(context.Context, *Request) (*Struct, error)
}

func RegisterBenchmarkServer(s *grpc.Server, srv BenchmarkServer) {
	s.RegisterService(&_Benchmark_serviceDesc, srv)
}

func _Benchmark_GetInt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BenchmarkServer).GetInt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Benchmark/GetInt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BenchmarkServer).GetInt(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Benchmark_GetIntSlice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BenchmarkServer).GetIntSlice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Benchmark/GetIntSlice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BenchmarkServer).GetIntSlice(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Benchmark_GetString_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BenchmarkServer).GetString(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Benchmark/GetString",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BenchmarkServer).GetString(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Benchmark_GetStringSlice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BenchmarkServer).GetStringSlice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Benchmark/GetStringSlice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BenchmarkServer).GetStringSlice(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Benchmark_GetBlob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BenchmarkServer).GetBlob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Benchmark/GetBlob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BenchmarkServer).GetBlob(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _Benchmark_GetStruct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BenchmarkServer).GetStruct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Benchmark/GetStruct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BenchmarkServer).GetStruct(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _Benchmark_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Benchmark",
	HandlerType: (*BenchmarkServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetInt",
			Handler:    _Benchmark_GetInt_Handler,
		},
		{
			MethodName: "GetIntSlice",
			Handler:    _Benchmark_GetIntSlice_Handler,
		},
		{
			MethodName: "GetString",
			Handler:    _Benchmark_GetString_Handler,
		},
		{
			MethodName: "GetStringSlice",
			Handler:    _Benchmark_GetStringSlice_Handler,
		},
		{
			MethodName: "GetBlob",
			Handler:    _Benchmark_GetBlob_Handler,
		},
		{
			MethodName: "GetStruct",
			Handler:    _Benchmark_GetStruct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api.proto",
}

func init() { proto1.RegisterFile("proto/api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 940 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0xd6, 0xe9, 0x76, 0x53, 0x55,
	0x18, 0xc6, 0xf1, 0x05, 0xa5, 0x0d, 0x39, 0x6d, 0xa9, 0x1e, 0x01, 0x1f, 0x0b, 0x22, 0x06, 0x07,
	0x1c, 0x20, 0x39, 0x7b, 0xde, 0xe2, 0x58, 0x87, 0x5a, 0x71, 0x04, 0xe7, 0x39, 0x8d, 0x59, 0xd8,
	0x65, 0x4d, 0x90, 0x9e, 0xfa, 0x5d, 0x6f, 0xc1, 0x1b, 0xf0, 0x9e, 0xbc, 0x05, 0x2f, 0xc4, 0x95,
	0x93, 0x70, 0x9e, 0xa7, 0x5d, 0x2c, 0x3f, 0xc1, 0x7e, 0x7f, 0x7b, 0xef, 0xe6, 0xfc, 0x3f, 0xed,
	0x62, 0xe3, 0xee, 0xbd, 0x69, 0x3d, 0xed, 0x0f, 0xef, 0xee, 0x5d, 0x6f, 0xfe, 0x57, 0x2e, 0x37,
	0xff, 0x6c, 0x5e, 0xbc, 0x33, 0x9d, 0xde, 0xd9, 0x1f, 0xcf, 0xa0, 0x3f, 0x9c, 0x4c, 0xa6, 0xf5,
	0xb0, 0xde, 0x9b, 0x4e, 0x0e, 0xe6, 0x9b, 0x7a, 0xdd, 0xa2, 0x73, 0x6b, 0xfc, 0xdb, 0xe1, 0xf8,
	0xa0, 0xee, 0x5d, 0x28, 0x96, 0x76, 0x26, 0x75, 0x79, 0xb6, 0x58, 0xfe, 0x7d, 0xb8, 0x7f, 0x38,
	0xc6, 0x89, 0xcb, 0x27, 0xae, 0x2e, 0xdf, 0x9a, 0x2f, 0x7a, 0x97, 0x8b, 0xd3, 0x3b, 0x93, 0xfa,
	0xf6, 0xfe, 0xde, 0x68, 0xac, 0x3b, 0x96, 0xb8, 0xe3, 0x52, 0xb1, 0x72, 0xbb, 0xbe, 0xb7, 0x37,
	0xb9, 0x73, 0xf4, 0x86, 0xee, 0x7d, 0xbf, 0x52, 0xac, 0xce, 0xfd, 0x01, 0x97, 0xb4, 0x9b, 0x2e,
	0x16, 0xa7, 0xb6, 0xf6, 0xa7, 0xbb, 0x47, 0xaf, 0x58, 0xbb, 0xaf, 0x7f, 0x9f, 0x6d, 0xfe, 0xc6,
	0xe1, 0xa8, 0x2e, 0xcf, 0x17, 0x2b, 0xcd, 0xac, 0x5a, 0xfc, 0xcc, 0xc5, 0xaa, 0x9d, 0x1b, 0x9c,
	0x94, 0xb9, 0x69, 0xe7, 0x16, 0x4b, 0x32, 0xb7, 0xed, 0xdc, 0xe1, 0x94, 0xcc, 0x5d, 0x3b, 0xf7,
	0x58, 0x96, 0xb9, 0x6f, 0xe7, 0x01, 0x2b, 0x32, 0x0f, 0xed, 0x3c, 0xa2, 0x23, 0xf3, 0xd8, 0xce,
	0x13, 0x4e, 0xcb, 0x3c, 0xb5, 0xf3, 0x8c, 0xae, 0xcc, 0x73, 0x89, 0xa2, 0x33, 0xff, 0x92, 0x01,
	0x8a, 0x06, 0xee, 0x2f, 0x29, 0x15, 0x56, 0x55, 0x2a, 0x8a, 0xc1, 0x9a, 0x8a, 0xa1, 0x58, 0xac,
	0xab, 0x58, 0x8a, 0xc3, 0x19, 0x15, 0x47, 0xf1, 0xd8, 0x50, 0xf1, 0x94, 0x80, 0x87, 0x54, 0x02,
	0x25, 0xe2, 0x61, 0x95, 0x48, 0x49, 0x28, 0x55, 0x12, 0x25, 0xe3, 0x11, 0x15, 0x36, 0x30, 0x03,
	0x9c, 0x15, 0x31, 0x6c, 0x60, 0x2a, 0x9c, 0x53, 0x61, 0x03, 0x63, 0x70, 0x5e, 0x85, 0x0d, 0x8c,
	0xc5, 0xa3, 0x2a, 0x6c, 0x60, 0x1c, 0xa0, 0xc2, 0x06, 0xc6, 0xe3, 0x31, 0x15, 0x36, 0x30, 0x01,
	0x9b, 0x2a, 0x6c, 0x60, 0x22, 0x2e, 0xa8, 0xb0, 0x81, 0x49, 0xb8, 0xa8, 0xc2, 0x06, 0x26, 0xe3,
	0x71, 0x15, 0x36, 0xb0, 0x03, 0x5c, 0x12, 0xb1, 0x6c, 0x60, 0x2b, 0x3c, 0xa1, 0xc2, 0x06, 0xd6,
	0xe0, 0xb2, 0x0a, 0x1b, 0x58, 0x8b, 0x27, 0x55, 0xd8, 0xc0, 0x3a, 0xf4, 0x54, 0xd8, 0xc0, 0x7a,
	0x5c, 0x51, 0x61, 0x03, 0x1b, 0xf0, 0x94, 0x0a, 0x1b, 0xd8, 0x88, 0xa7, 0x55, 0xd8, 0xc0, 0x26,
	0x3c, 0xa3, 0xc2, 0x06, 0x36, 0xe3, 0x59, 0x15, 0x36, 0x70, 0x03, 0x5c, 0x15, 0x71, 0x6c, 0xe0,
	0x2a, 0x3c, 0xa7, 0xc2, 0x06, 0xce, 0xe0, 0x79, 0x15, 0x36, 0x70, 0x16, 0x2f, 0xa8, 0xb0, 0x81,
	0x73, 0x78, 0x51, 0x85, 0x0d, 0x9c, 0xc7, 0x35, 0x15, 0x36, 0x70, 0x01, 0xd7, 0x55, 0xd8, 0xc0,
	0x45, 0xf4, 0x55, 0xd8, 0xc0, 0x25, 0x0c, 0x54, 0xd8, 0xc0, 0x65, 0x54, 0x2a, 0x6c, 0xe0, 0x07,
	0x30, 0x22, 0x9e, 0x0d, 0x7c, 0x05, 0xab, 0xc2, 0x06, 0xde, 0xc0, 0xa9, 0xb0, 0x81, 0xb7, 0xf0,
	0x2a, 0x6c, 0xe0, 0x1d, 0x82, 0x0a, 0x1b, 0x78, 0x8f, 0xa8, 0xc2, 0x06, 0x3e, 0x20, 0xa9, 0xb0,
	0x81, 0x8f, 0xc8, 0x2a, 0x6c, 0xe0, 0x13, 0x5e, 0x52, 0x61, 0x03, 0x9f, 0x71, 0x43, 0x85, 0x0d,
	0xc2, 0x00, 0x2f, 0x8b, 0x04, 0x36, 0x08, 0x15, 0x5e, 0x51, 0x61, 0x83, 0x60, 0xf0, 0xaa, 0x0a,
	0x1b, 0x04, 0x8b, 0xd7, 0x54, 0xd8, 0x20, 0x38, 0xbc, 0xae, 0xc2, 0x06, 0xc1, 0xe3, 0x0d, 0x15,
	0x36, 0x08, 0x01, 0x5b, 0x2a, 0x6c, 0x10, 0x22, 0xde, 0x54, 0x61, 0x83, 0x90, 0xf0, 0x96, 0x0a,
	0x1b, 0x84, 0x8c, 0xb7, 0x55, 0xd8, 0x20, 0x0e, 0xf0, 0x8e, 0x48, 0x64, 0x83, 0x58, 0x61, 0x5b,
	0x85, 0x0d, 0xa2, 0xc1, 0xbb, 0x2a, 0x6c, 0x10, 0x2d, 0x76, 0x54, 0xd8, 0x20, 0x3a, 0xbc, 0xa7,
	0xc2, 0x06, 0xd1, 0xe3, 0xa6, 0x0a, 0x1b, 0xc4, 0x80, 0xf7, 0x55, 0xd8, 0x20, 0x46, 0x7c, 0xa0,
	0xc2, 0x06, 0x31, 0xe1, 0x43, 0x15, 0x36, 0x88, 0x19, 0x1f, 0xa9, 0xb0, 0x41, 0x1a, 0xe0, 0x63,
	0x91, 0xc4, 0x06, 0xa9, 0xc2, 0x27, 0x2a, 0x6c, 0x90, 0x0c, 0x6e, 0xa9, 0xb0, 0x41, 0xb2, 0xb8,
	0xad, 0xc2, 0x06, 0xc9, 0xe1, 0x53, 0x15, 0x36, 0x48, 0x1e, 0x9f, 0xa9, 0xb0, 0x41, 0x0a, 0xf8,
	0x5c, 0x85, 0x0d, 0x52, 0xc4, 0x17, 0x2a, 0x6c, 0x90, 0x12, 0xbe, 0x54, 0x61, 0x83, 0x94, 0xf1,
	0x95, 0x0a, 0x1b, 0xe4, 0x01, 0xbe, 0x16, 0xc9, 0x6c, 0x90, 0x2b, 0x7c, 0xa3, 0xc2, 0x06, 0xd9,
	0xe0, 0x5b, 0x15, 0x36, 0xc8, 0x16, 0xdf, 0xa9, 0xb0, 0x41, 0x76, 0xf8, 0x5e, 0x85, 0x0d, 0xb2,
	0xc7, 0x0f, 0x2a, 0x6c, 0x90, 0x03, 0x7e, 0x54, 0x61, 0x83, 0x1c, 0x31, 0x54, 0x61, 0x83, 0x9c,
	0xb0, 0xab, 0xc2, 0x06, 0x39, 0x63, 0xa4, 0x92, 0xcb, 0xcd, 0xe2, 0xf4, 0xe2, 0x51, 0x34, 0xc0,
	0x4f, 0x0d, 0xb5, 0x6b, 0xf3, 0xc7, 0x52, 0xd1, 0xdd, 0x1a, 0x4f, 0x46, 0x3f, 0xff, 0x3a, 0xbc,
	0xf7, 0x4b, 0x69, 0x8a, 0x95, 0xed, 0x71, 0x3d, 0x7b, 0xd5, 0x9e, 0x99, 0xbf, 0x77, 0xaf, 0x2f,
	0x1e, 0xbb, 0x9b, 0xc5, 0x62, 0xbd, 0x33, 0xa9, 0x7b, 0x6b, 0x7f, 0xfe, 0xf3, 0xef, 0x5f, 0x27,
	0x57, 0xca, 0x53, 0xfd, 0xbd, 0x49, 0x5d, 0x6e, 0x15, 0xab, 0xf3, 0x33, 0xf3, 0x77, 0xea, 0xf1,
	0x83, 0x1b, 0x3c, 0xd8, 0x6c, 0xe8, 0x95, 0xcd, 0xe9, 0xb5, 0xb2, 0x98, 0x9d, 0xbe, 0x76, 0xd0,
	0x1c, 0xba, 0x51, 0x74, 0xb7, 0xc7, 0xf5, 0xe2, 0x39, 0x7c, 0xfc, 0x86, 0xf5, 0xc5, 0x7a, 0xce,
	0xbd, 0x8d, 0xe6, 0x7c, 0xb7, 0xec, 0xf4, 0x0f, 0xe6, 0xfb, 0x6f, 0x16, 0x67, 0xda, 0xc3, 0x0f,
	0xfe, 0x0d, 0xe5, 0x91, 0x1b, 0xe6, 0x3f, 0xe3, 0x5c, 0x73, 0xcd, 0x46, 0xb9, 0xbe, 0xb8, 0x66,
	0xf1, 0x4b, 0x7c, 0xd1, 0xd9, 0x1e, 0xd7, 0xcd, 0x9b, 0xfa, 0xf8, 0x2d, 0xab, 0x8b, 0xf5, 0x0c,
	0x7b, 0xeb, 0xcd, 0xf1, 0x4e, 0xb9, 0xdc, 0xdf, 0x9d, 0xed, 0x6d, 0x3f, 0x60, 0xf6, 0xd6, 0xfe,
	0x9f, 0x0f, 0x38, 0x1c, 0xd5, 0x47, 0x3f, 0xe0, 0x70, 0x54, 0xef, 0xae, 0x34, 0x6c, 0xff, 0x0b,
	0x00, 0x00, 0xff, 0xff, 0x8b, 0x2a, 0xec, 0xe8, 0x92, 0x0c, 0x00, 0x00,
}
